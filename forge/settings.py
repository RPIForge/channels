"""
Django settings for chatsite project.

Generated by 'django-admin startproject' using Django 2.2.14.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
from decouple import config
from django.core.management.utils import get_random_secret_key

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY',default=get_random_secret_key(), cast=str)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG',default=False, cast=bool)
ALLOWED_HOSTS = config('ALLOWED_HOSTS',default='*', cast=lambda v: [s.strip() for s in v.split(',')])



# Application definition

INSTALLED_APPS = [
    'channels',
    'chat',
    'forge',
    'corsheaders',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
]


CSRF_COOKIE_SAMESITE = None
SESSION_COOKIE_SAMESITE = None
#SESSION_COOKIE_SECURE = True

ROOT_URLCONF = 'forge.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'forge.context_processors.websocket_url',
            ],
        },
    },
]

WSGI_APPLICATION = 'forge.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': config('POSTGRES_DB',default="forge_devel_channels"),
        'USER': config('POSTGRES_USER',default="postgres"),
        'PASSWORD': config('POSTGRES_PASSWORD',default="password"),
        'HOST': config('POSTGRES_HOST',default="db"),
        'PORT': config('POSTGRES_PORT',default="5432"), 
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/New_York'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

##STATIC FILES
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

##MEDIA FILES
MEDIA_URL = '/uploads/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

REDIS_IP = config('REDIS_URL',default="redis")
REDIS_PORT = config('REDIS_PORT',default=6379, cast=int)

# CELERY Items
BROKER_URL = 'redis://'+REDIS_IP+':'+str(REDIS_PORT)
CELERY_RESULT_BACKEND = 'redis://'+REDIS_IP+':'+str(REDIS_PORT)
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = TIME_ZONE



#ASGI Application
ASGI_APPLICATION = 'forge.routing.application'
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [(REDIS_IP, REDIS_PORT)],
        },
    },
} 


CHAT_SITE_URL = config('CHAT_SITE_URL',default='localhost')
CHAT_SITE_PORT = config('CHAT_SITE_PORT',default='9000')
CHAT_SITE_HTTPS = config('CHAT_SITE_HTTPS',default=True, cast=bool)

#ssl port
#CHAT_SITE_WSS_PORT="8002"

MAIN_SITE_URL= config('MAIN_SITE_URL',default='localhost')
MAIN_SITE_PORT=config('MAIN_SITE_PORT',default=8000, cast=int)

#cORS SET update
CORS_ORIGIN_WHITELIST = [
    "http://"+MAIN_SITE_URL+":"+str(MAIN_SITE_PORT),
    "https://"+MAIN_SITE_URL+":"+str(MAIN_SITE_PORT), 
]

X_FRAME_OPTIONS = 'ALLOW-FROM '+str(MAIN_SITE_URL)
